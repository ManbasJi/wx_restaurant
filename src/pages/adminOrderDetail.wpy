<style lang="less">
	page{
		background:#f2f2f2;
	}
	.top_container{
		margin:15rpx 20rpx;
		background:#fff;
		text-align:center;
		height:100rpx;
		line-height:100rpx;
		text{
			font-weight:600;
			font-size:32rpx;
			color:#333;
		}
	}
	.content_container{
		margin:0rpx 20rpx 15rpx 20rpx;
	}
	.list{
		height:130rpx;
		background:#f2f2f2;
		padding:10rpx 20rpx;
		image{
			width:120rpx;
			height:110rpx;
			float:left;
			margin-right:20rpx;
		}
		.name{
			font-size:28rpx;
			color:#333;
			float:left;
		}
		.amount{
			width:100%;
			text-align:right;
		}
		.attr{
			font-size:26rpx;
			color:#999;
		}
		.num{
			font-size:26rpx;
			color:#999;
		}
	}
	.order_price_content{
		padding:10rpx 15rpx;
		background:#fff;
		height:100rpx;
		border-bottom: 1px dashed #cdcdcd;
		border-radius:0rpx 0rpx 20rpx 20rpx;
		.pack_price{
			.text1{
				float:left;
				font-size:28rpx;
			}
			.text2{
				font-size:28rpx;
				width:100%;
				text-align:right;
			}
		}
		.distribute_price{
			margin-top:20rpx;
			.text1{
				float:left;
				font-size:28rpx;
			}
			.text2{
				font-size:28rpx;
				width:100%;
				text-align:right;
			}
		}
	}
	.discount_content{
		background:#fff;
		padding:10rpx 15rpx;
		height:100rpx;
		border-radius: 20rpx 20rpx 20rpx 20rpx;
		border-bottom: 1px dashed #cdcdcd;
		.discount_price{
			.text1{
				float:left;
				font-size:28rpx;
			}
			.text2{
				font-size:28rpx;
				width:100%;
				text-align:right;
			}
		}
		.counpon_price{
			margin-top:20rpx;
			.text1{
				float:left;
				font-size:28rpx;
			}
			.text2{
				font-size:28rpx;
				width:100%;
				text-align:right;
			}
		}
	}
		.all_price{
			height:80rpx;
			line-height:80rpx;
			padding:0rpx 15rpx;
			font-size:30rpx;
			background:#fff;
			border-radius: 20rpx 20rpx 0rpx 0rpx;
			text-align:right;
			font-weight:600;
			text{
				color:red;
				font-size:30rpx;
				font-weight:600;
			}
		}
		.option{
			border-top: 1px dashed #cdcdcd;
			height:80rpx;
			line-height:80rpx;
			background:#fff;
			text-align:center;
			color:#333;
		}	

		.other_msg{
			height:80rpx;
			background:#fff;
			padding:10rpx 15rpx;
			margin:0rpx 20rpx; 
			margin-top:20rpx;
			font-size:28rpx;
		}	
		.order_msg{
			background:#fff;
			padding:0rpx 15rpx;
			padding-top:1rpx;
			padding-bottom:20rpx;
			margin:20rpx 20rpx;
			font-size:26rpx;
		}
		.title_value{
			font-size:26rpx;
			color:#999;
			margin-top:25rpx;
			text{
				margin-left:30rpx;
				color:#666;
			}
		}
</style>

<template>
	<view class="top_container">
		<text wx:if="{{orderListItem.fStatus==0}}">待支付</text>
		<text wx:if="{{orderListItem.fStatus==1}}">已支付，待确认</text>
		<text wx:if="{{orderListItem.fStatus==2}}">待配送</text>
		<text wx:if="{{orderListItem.fStatus==3}}">订单配送中...</text>
		<text wx:if="{{orderListItem.fStatus==6}}">已确认，待上菜</text>
		<text wx:if="{{orderListItem.fStatus==4}}">已完成</text>
		<text wx:if="{{orderListItem.fStatus==5}}">已取消</text>
	</view>
	<view class="content_container">
		<repeat for="{{goodsList}}" key="index" index="index" item="item">
			<view class="list">
				<image src="../images/manbasji_logo.jpg"></image>
				<view class="name">{{item.fGoodsName}}</view>
				<view class="amount">￥{{item.fPrice}}</view>
				<view class="attr">{{item.fAttrType1==null?"":item.fAttrType1}}
				{{item.fAttrType2==null?"":item.fAttrType2}}{{item.fAttrType3==null?"":item.fAttrType3}}{{item.fAttrType4==null?"":item.fAttrType4}}</view>
				<view class="num">x{{item.fNum}}</view>
			</view>
		</repeat>
		<view class="order_price_content">
			<view class="pack_price">
				<view class="text1">餐盒费</view>
				<view class="text2">￥{{orderListItem.fPackPrice}}</view>
			</view>
			<view class="distribute_price">
				<view class="text1">配送费</view>
				<view class="text2">￥{{orderListItem.fDistributionPrice}}</view>
			</view>
		</view>
		<view class="discount_content">
			<view class="discount_price">
				<view class="text1">折扣</view>
				<view class="text2">￥{{orderListItem.fDiscountPrice}}</view>
			</view>
			<view class="counpon_price">
				<view class="text1">优惠</view>
				<view class="text2">￥{{orderListItem.fReductionPrice}}</view>
			</view>
		</view>
		<view class="all_price">
			实付<text>￥{{orderListItem.fAllAmount}}</text>
		</view>
		<view class="option" id="btn_option" wx:if="{{orderListItem.ftype==1}}" @tap.stop="onCallPhone">
			<i class="iconfont icon-phone"></i>
			联系顾客
		</view>
	</view>
	<view class="footer_container">
		<view class="other_msg">
			<view class="title_value" wx:if="{{orderListItem.ftype==1}}"><span style="height:80rpx">配送地址</span><text>{{address}}</text></view>
			<view class="title_value" wx:if="{{orderListItem.ftype==0}}">餐桌号<text>{{orderListItem.fTableNo}}</text></view>
		</view>
		<view class="order_msg">
			<view class="title_value">订单号码<text>{{orderListItem.fOrderNo}}</text></view>
			<view class="title_value">订单时间<text>{{orderListItem.fDate}}</text></view>
			<view class="title_value">支付方式<text>{{orderListItem.fPayType==0?'现金支付':'微信支付'}}</text></view>
			<view class="title_value">订单备注<text>{{orderListItem.fNote}}</text></view>			
		</view>
	</view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api';
import {
	ORDER_DETAIL,
	SHOPID
} from '@/utils/constant'
export default class AdminOrderDetail extends wepy.page{
	config = {
		navigationBarTitleText :'订单详情',
		navigationBarBackgroundColor: '#f2f2f2',
		navigationBarTextStyle: 'black',
	}

	data = {
		phone:'',
		address:'',
		orderId:'',
		orderListItem:{},
		shopId:'',
		addressMsg:{},
		goodsList:[]
	}

	onLoad(opts){
		this.orderListItem = wepy.getStorageSync(ORDER_DETAIL)||{};
		this.shopId = wepy.getStorageSync(SHOPID)||{}
		console.log("orderListItem===",this.orderListItem);
		this.onGetOrderDetail();
		//订单类型是外卖类型的请求获取顾客地址
		if(this.orderListItem.ftype==1){
			this.getUserAddress();
		}

	}

	async getUserAddress(){
		let that = this;
		const json =await api.getAddressAll({
			query:{
				fShopId:that.shopId,
				fCustId:'',
				fId:this.orderListItem.fAddressId,
			}
		});
		console.log("发送getUserAddress请求===",json);
		if(json.data.code == 0){
			this.addressMsg = json.data.data[0];
			this.address = this.addressMsg.fCityId+this.addressMsg.fAreaId+this.addressMsg.fAddress+this.addressMsg.fName+this.addressMsg.fPhone;
			this.phone = this.addressMsg.fPhone
		}else{
			tip.error(json.data.msg);
		}
		that.showLoading = false;
		this.$apply();
	}

	async onGetOrderDetail(){
		let that = this;
		const json = await api.getOrderDetail({
			query:{
				fOrderId:this.orderListItem.fOrderId
			}
		});

		console.log("onGetOrderDetail===",json);
		if(json.data.code==0){
			this.goodsList = json.data.data;
		}
		console.log("合并后的orderListItem==",this.orderListItem);
		this.$apply();
	}

	methods = {
		onCallPhone(e){
			let that = this;
			console.log("onCallPhone",that.phone);
			wx.makePhoneCall({
				phoneNumber:that.phone
			});
		}
	}
}
</script>